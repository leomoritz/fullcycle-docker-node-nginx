services:
  app:
    build: 
      context: .
    container_name: app
    networks:
      - node-network
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules # Volume anônimo (link simbólico) para proteger node_modules de ser substituída na montagem dos volumes da aplicação
    tty: true
    ports:
      - "3000:3000"
    # Utiliza o dockerize para esperar por 20s o banco subir e somente após isso executa o docker-entrypoint.sh de app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    command: ["node", "index.js"]
    depends_on:
      - db
  
  nginx:
    build:
      context: ./nginx
    container_name: nginx-container
    networks:
      - node-network
    volumes:
      - ./nginx:/etc/nginx/
    tty: true
    ports:
      - "8080:80"
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - app

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: mysql-container
    restart: always
    tty: true
    ports: 
      - "3306:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../databases/mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
      # - MYSQL_USER=root - Nas novas versões da imagem do MySQL 5.7, essa variável não é mais aceita, porque o usuário root do banco já é criado por padrão
    networks:
      - node-network

networks:
  node-network:
    driver: bridge
